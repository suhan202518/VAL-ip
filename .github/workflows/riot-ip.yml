name: Riot IP Updater
on:
  schedule:
    - cron: "0 12 * * *"
  workflow_dispatch:

env:
  CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

jobs:
  generate-rule:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Fetch IPs
      id: fetch_ips
      run: |
        # 带认证的API请求
        curl -s -H "Authorization: Bearer $CF_API_TOKEN" \
          -H "Content-Type: application/json" \
          "https://api.cloudflare.com/client/v4/radar/asns/6507/prefixes?format=json" \
          -o riot_cache.json || echo "API_FAILED=true" >> $GITHUB_ENV

        # 添加IP数据有效性验证
        if jq -e '.result.ipv4_prefixes' riot_cache.json >/dev/null; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "::error::Invalid API response structure"
          exit 1
        fi

        # 带容错的规则生成
        {
          echo "payload:"
          echo "  - DOMAIN-SUFFIX,riotgames.com,🎮VALORANT"
          echo "  - DOMAIN-SUFFIX,valorantgame.com,🎮VALORANT"
          jq -r '.result.ipv4_prefixes[] | "  - IP-CIDR,\(.prefix),🎮VALORANT"' riot_cache.json 2>/dev/null
        } > val-ip.yaml

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: game-rules
        path: val-ip.yaml

    - name: Deploy Pages
      if: ${{ success() && steps.fetch_ips.outputs.changed == 'true' }}
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
        publish_branch: gh-pages
        force_orphan: false  # 保留历史版本
