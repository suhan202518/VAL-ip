name: Riot IP Updater
on:
  schedule:
    - cron: "0 12 * * *"
  workflow_dispatch:

env:
  CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

jobs:
  generate-rule:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Fetch IPs
      id: fetch_ips
      run: |
        # 带状态码检查的重试机制
        RETRY_COUNT=0
        MAX_RETRY=3
        while [ $RETRY_COUNT -lt $MAX_RETRY ]; do
          HTTP_CODE=$(curl -s -o riot_cache.json -w "%{http_code}" \
            -H "Authorization: Bearer $CF_API_TOKEN" \
            -H "Content-Type: application/json" \
            "https://api.cloudflare.com/client/v4/radar/asns/6507/prefixes?format=json")
          
          # 检查HTTP状态码和响应结构
          if [ $HTTP_CODE -eq 200 ] && jq -e '.success == true and .result.ipv4_prefixes != null and (.result.ipv4_prefixes | length) > 0' riot_cache.json >/dev/null; then
            echo "API请求成功"
            break
          else
            RETRY_COUNT=$((RETRY_COUNT+1))
            echo "::warning::第${RETRY_COUNT}次请求失败 (HTTP ${HTTP_CODE})"
            sleep 15
          fi
        done

        # 最终失败处理
        if [ $RETRY_COUNT -eq $MAX_RETRY ]; then
          echo "::error::所有重试均失败，最后响应内容："
          cat riot_cache.json
          exit 1
        fi

        # 生成带校验头的规则文件
        {
          echo "# Auto-generated at: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          echo "payload:"
          echo "  - DOMAIN-SUFFIX,riotgames.com,🎮VALORANT"
          echo "  - DOMAIN-SUFFIX,valorantgame.com,🎮VALORANT"
          jq -r '.result.ipv4_prefixes[] | "  - IP-CIDR,\(.prefix),🎮VALORANT"' riot_cache.json
        } > val-ip.yaml

        # 二次文件校验
        if [ $(wc -l < val-ip.yaml) -lt 3 ]; then
          echo "::error::生成的规则文件异常，行数不足"
          exit 1
        fi

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: valorant-rules
        path: val-ip.yaml

    - name: Deploy Pages
      if: ${{ success() }}
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
        publish_branch: gh-pages
        keep_files: true
