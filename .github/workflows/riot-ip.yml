name: Riot IP Updater
on:
  schedule:
    - cron: "0 12 * * *"
  workflow_dispatch:

jobs:
  generate-rule:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Precheck Secrets
      id: secret_check
      run: |
        # 强制验证密钥存在性
        if [ -z "${{ secrets.CF_TOKEN }}" ]; then
          echo "::error::❌ 致命错误：CF_TOKEN未配置 → 请到仓库 Settings → Secrets → Actions 添加"
          echo "::warning::创建指引：https://dash.cloudflare.com/profile/api-tokens"
          echo "::warning::所需权限：Zone.Read + Radar.Read"
          exit 1
        fi
        echo "✅ 密钥预检通过"

    - name: Fetch IPs
      env:
        CF_TOKEN: ${{ secrets.CF_TOKEN }}
      run: |
        # 带认证头的请求
        curl -s -H "Authorization: Bearer $CF_TOKEN" \
          "https://api.cloudflare.com/client/v4/radar/asns/6507/prefixes?format=json" \
          -o riot_cache.json

        # 认证失败诊断
        if ! jq -e '.success == true' riot_cache.json >/dev/null; then
          echo "::error::❌ Cloudflare API响应异常"
          echo "::warning::错误详情：$(jq -c '.errors[0].message' riot_cache.json)"
          echo "::warning::请确认：1.API Token有效 2.ASN编号正确"
          exit 1
        fi

        # 生成规则文件
        echo "payload:" > val-ip.yaml
        {
          echo "  - DOMAIN-SUFFIX,riotgames.com,🎮VALORANT"
          echo "  - DOMAIN-SUFFIX,valorantgame.com,🎮VALORANT"
          jq -r '.result.ipv4_prefixes[] | "  - IP-CIDR,\(.prefix),🎮VALORANT"' riot_cache.json
        } >> val-ip.yaml

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: valorant-rules
        path: val-ip.yaml

    - name: Deploy Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
        publish_branch: gh-pages
        keep_files: true
